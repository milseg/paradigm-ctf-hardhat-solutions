from random import randint
from eth_keys import keys

def privToPub(privHexStr):
	priv = bytearray.fromhex(privHexStr) #without 0x prefix
	pub = keys.PrivateKey(priv).public_key
	return pub.to_hex()[2:]

# Need to find some a private key corresponding to a public key that is also valid bytecode. An easy way to do this is to find one with 
# a public key that has a zero byte at the start (since this is the STOP instruction). 
def find_account():
    while True:
        i = randint(0, 2**256-1)
        priv = i.to_bytes(32, byteorder="little")
        pub = keys.PrivateKey(priv).public_key
        if pub.to_bytes()[0] == 0:
            return priv.hex(), pub.to_hex()[2:]


account_privkey, account_pubkey = find_account()

print("account_privkey", account_privkey)
print("account_pubkey", account_pubkey)

#0x890d6908000000000000000000000000000000000000000000000000000000000000006100000000000000000000000000000000000000000000000000000000000001af00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001007f00fe9abd8b9306e7498bedc780cfd67649acd82c840dba6bb9b816c7cb6941126000527f66dd41d75690e2c9274f54b3e4f18424bc9ee9445dad7c6abcb9e12c4a1f1efd60205260406000f